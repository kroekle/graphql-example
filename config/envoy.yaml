static_resources:
  listeners:
  - name: listener_ingress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 7000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.header_to_metadata
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config
              request_rules:
              - header: x-opa-authz
                on_header_missing:
                  key: 'policy_type'
                  value: 'ingress'
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              failure_mode_allow: true
              with_request_body:
                max_request_bytes: 2097152
                allow_partial_message: true
              metadata_context_namespaces:
              - envoy.filters.http.header_to_metadata
              transport_api_version: V3
              grpc_service:
                google_grpc:
                  target_uri: opa:9191
                  stat_prefix: opa_ext_authz
                timeout: 1s
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: local_service
  - name: listener_egress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: egress_http
          http_filters:
          - name: envoy.filters.http.header_to_metadata
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config
              request_rules:
              - header: x-opa-authz
                on_header_missing:
                  key: 'policy_type'
                  value: 'egress'
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              failure_mode_allow: true
              metadata_context_namespaces:
              - envoy.filters.http.header_to_metadata
              transport_api_version: V3
              grpc_service:
                google_grpc:
                  target_uri: opa:9191
                  stat_prefix: opa_ext_authz
                timeout: 1s
          - name: envoy.filters.http.router
          route_config:
            name: egress_service
            virtual_hosts:
            - name: egress_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: external_service
    listener_filters:
    - name: envoy.filters.listener.original_dst
      typed_config: {}

  clusters:
  - name: local_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS 
    lb_policy: round_robin
    load_assignment:
      cluster_name: local_service
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: starwars
                  port_value: 4000 
  - name: external_service
    type: ORIGINAL_DST
    connect_timeout: 0.25s
    lb_policy: CLUSTER_PROVIDED
    dns_lookup_family: V4_ONLY

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8008

